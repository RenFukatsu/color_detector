PACKAGE = "color_detector_params"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("only_publish_mask", bool_t, 0, "do not calc target clustering", False)
gen.add("publish_target", bool_t, 0, "do not calc target clustering", False)
gen.add("blue_enable", bool_t, 0, "do not calc target clustering", False)
gen.add("red_enable", bool_t, 0, "do not calc target clustering", False)
gen.add("green_enable", bool_t, 0, "do not calc target clustering", False)
gen.add("yellow_enable", bool_t, 0, "do not calc target clustering", False)
gen.add("orange_enable", bool_t, 0, "do not calc target clustering", False)
gen.add("purple_enable", bool_t, 0, "do not calc target clustering", False)

gen.add("HIGHEST_TARGET_Y", double_t, 0, "discription", 0.0, -2.0, 2.0)
gen.add("LOWEREST_TARGET_Y", double_t, 0, "discription", 0.0, -2.0, 2.0)

gen.add("LOWER_RED_H", int_t, 0, "discription", 0, 0, 180)
gen.add("LOWER_RED_S", int_t, 0, "discription", 0, 0, 255)
gen.add("LOWER_RED_V", int_t, 0, "discription", 0, 0, 255)
gen.add("UPPER_RED_H", int_t, 0, "discription", 0, 0, 180)
gen.add("UPPER_RED_S", int_t, 0, "discription", 0, 0, 255)
gen.add("UPPER_RED_V", int_t, 0, "discription", 0, 0, 255)

gen.add("LOWER_GREEN_H", int_t, 0, "discription", 0, 0, 180)
gen.add("LOWER_GREEN_S", int_t, 0, "discription", 0, 0, 255)
gen.add("LOWER_GREEN_V", int_t, 0, "discription", 0, 0, 255)
gen.add("UPPER_GREEN_H", int_t, 0, "discription", 0, 0, 180)
gen.add("UPPER_GREEN_S", int_t, 0, "discription", 0, 0, 255)
gen.add("UPPER_GREEN_V", int_t, 0, "discription", 0, 0, 255)

gen.add("LOWER_BLUE_H", int_t, 0, "discription", 0, 0, 180)
gen.add("LOWER_BLUE_S", int_t, 0, "discription", 0, 0, 255)
gen.add("LOWER_BLUE_V", int_t, 0, "discription", 0, 0, 255)
gen.add("UPPER_BLUE_H", int_t, 0, "discription", 0, 0, 180)
gen.add("UPPER_BLUE_S", int_t, 0, "discription", 0, 0, 255)
gen.add("UPPER_BLUE_V", int_t, 0, "discription", 0, 0, 255)

gen.add("LOWER_YELLOW_H", int_t, 0, "discription", 0, 0, 180)
gen.add("LOWER_YELLOW_S", int_t, 0, "discription", 0, 0, 255)
gen.add("LOWER_YELLOW_V", int_t, 0, "discription", 0, 0, 255)
gen.add("UPPER_YELLOW_H", int_t, 0, "discription", 0, 0, 180)
gen.add("UPPER_YELLOW_S", int_t, 0, "discription", 0, 0, 255)
gen.add("UPPER_YELLOW_V", int_t, 0, "discription", 0, 0, 255)

gen.add("LOWER_ORANGE_H", int_t, 0, "discription", 0, 0, 180)
gen.add("LOWER_ORANGE_S", int_t, 0, "discription", 0, 0, 255)
gen.add("LOWER_ORANGE_V", int_t, 0, "discription", 0, 0, 255)
gen.add("UPPER_ORANGE_H", int_t, 0, "discription", 0, 0, 180)
gen.add("UPPER_ORANGE_S", int_t, 0, "discription", 0, 0, 255)
gen.add("UPPER_ORANGE_V", int_t, 0, "discription", 0, 0, 255)

gen.add("LOWER_PURPLE_H", int_t, 0, "discription", 0, 0, 180)
gen.add("LOWER_PURPLE_S", int_t, 0, "discription", 0, 0, 255)
gen.add("LOWER_PURPLE_V", int_t, 0, "discription", 0, 0, 255)
gen.add("UPPER_PURPLE_H", int_t, 0, "discription", 0, 0, 180)
gen.add("UPPER_PURPLE_S", int_t, 0, "discription", 0, 0, 255)
gen.add("UPPER_PURPLE_V", int_t, 0, "discription", 0, 0, 255)


exit(gen.generate(PACKAGE, "color_detector_params", "Hsv"))
